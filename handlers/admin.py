from aiogram import Router, F, Bot
from aiogram.exceptions import TelegramForbiddenError
from aiogram.fsm.context import FSMContext
from aiogram.types import Message, CallbackQuery, chat

from config import admins_id
from keyboards.admin.inline import get_message_confirm_markup
from keyboards.menu_reply import get_menu_markup
from loader import db_connection
from states import AdminStates

admin_router = Router()
admin_states = AdminStates()


@admin_router.message(F.text == '–û—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–ºüì§')
async def handle_make_a_newsletter(message: Message, state: FSMContext):
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ –ø–æ–ø—ã—Ç–∫–∏ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º."""
    is_admin = message.from_user.id in admins_id

    if is_admin:
        await state.set_state(admin_states.WAIT_FOR_ADMIN_MESSAGE)
        text = '–í–≤–µ–¥–∏—Ç–µ —Å–æ–æ–±—â–µ–Ω–∏–µ, –∫–æ—Ç–æ—Ä–æ–µ –±—É–¥–µ—Ç –≤—ã—Å–ª–∞–Ω–æ <b>–≤—Å–µ–º</b> –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º'
        await message.answer(text=text, parse_mode='HTML')
    else:
        await message.answer(
            text='–í—ã –Ω–µ –∏–º–µ–µ—Ç–µ –¥–æ—Å—Ç—É–ø–∞ –∫ —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥–µ‚ùå',
            reply_markup=get_menu_markup()
        )


@admin_router.message(admin_states.WAIT_FOR_ADMIN_MESSAGE)
async def handle_news_letter(message: Message, state: FSMContext):
    """–ü–æ–ª—É—á–µ–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è, –∫–æ—Ç–æ—Ä–æ–µ –Ω—É–∂–Ω–æ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º."""
    await state.update_data(admin_text=message.text)
    await state.set_state(admin_states.WAIT_FOR_CONFIRM)

    text = f'–í–∞—à–µ —Å–æ–æ–±—â–µ–Ω–∏–µ:\n\n' \
           f'{message.text}'
    await message.answer(text=text, reply_markup=get_message_confirm_markup())


@admin_router.callback_query(F.data == 'confirm', admin_states.WAIT_FOR_CONFIRM)
async def handle_confirm(callback: CallbackQuery, state: FSMContext, bot: Bot):
    """–ï—Å–ª–∏ –∞–¥–º–∏–Ω –ø–æ–¥—Ç–≤–µ—Ä–¥–∏–ª, —á—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ –ø—Ä–∞–≤–∏–ª—å–Ω–æ–µ."""
    # –ü–æ–ª—É—á–µ–Ω–∏–µ —á–∞—Ç–∞ id –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
    data = await state.get_data()
    admin_message = data['admin_text']
    all_users_chat_id = await db_connection.get_all_users_chat_id()

    for chat_id in all_users_chat_id:
        try:
            await bot.send_message(text=admin_message, chat_id=chat_id[0])
        except TelegramForbiddenError:
            pass

    await callback.message.answer(
        text='–°–æ–æ–±—â–µ–Ω–∏—è —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω—ã‚úÖ',
        reply_markup=get_menu_markup(is_admin=True)
    )
    await state.clear()
    await callback.answer()


@admin_router.callback_query(
    F.data == 'rewrite', admin_states.WAIT_FOR_CONFIRM
)
async def handle_rewrite(callback: CallbackQuery):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –Ω–∞–ø–∏—Å–∞–Ω–Ω–æ–≥–æ –±—é–¥–∂–µ—Ç–∞."""
    text = '–í–≤–µ–¥–∏—Ç–µ —Å–æ–æ–±—â–µ–Ω–∏–µ, –∫–æ—Ç–æ—Ä–æ–µ –±—É–¥–µ—Ç –≤—ã—Å–ª–∞–Ω–æ <b>–≤—Å–µ–º</b> –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º"'
    await callback.message.answer(text=text, parse_mode='HTML')
    await callback.answer()


@admin_router.callback_query(
    F.data == 'cancel', admin_states.WAIT_FOR_CONFIRM
)
async def handle_cancel(callback: CallbackQuery, state: FSMContext):
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—Ç–º–µ–Ω—ã —Ä–∞—Å—Å—ã–ª–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è."""
    text = '–í—ã –≤–µ—Ä–Ω—É–ª–∏—Å—å –≤ –º–µ–Ω—é'
    await callback.message.answer(
        text=text,
        reply_markup=get_menu_markup(is_admin=True)
    )
    await callback.answer()
    await state.clear()
